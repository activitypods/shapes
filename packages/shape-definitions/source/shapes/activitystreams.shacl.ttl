@prefix : <https://shapes.activitypods.org/v2/shapes/activitystreams#> .
@prefix as: <https://www.w3.org/ns/activitystreams#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix schema: <http://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# 1. Property shapes (reusable)

_:ObjectProperties
  sh:description "Describes an object of any kind. The Object type serves as the base type for most of the other kinds of objects defined in the Activity Vocabulary, including other Core types such as Activity, IntransitiveActivity, Collection and OrderedCollection." ;
  sh:property [ sh:name "attachment" ; sh:path as:attachment ; sh:description "Identifies a resource attached or related to an object that potentially requires special handling. The intent is to provide a model that is at least semantically similar to attachments in email." ; sh:minCount 0 ; sh:or ( [ sh:class as:Object ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:name "attributedTo" ; sh:path as:attributedTo ; sh:description "Identifies one or more entities to which this object is attributed. The attributed entities might not be Actors. For instance, an object might be attributed to the completion of another activity." ; sh:minCount 0 ; sh:or ( [ sh:class as:Link ] [ sh:class as:Object ] ) ] ;
  sh:property [ sh:name "audience" ; sh:path as:audience ; sh:description "Identifies one or more entities that represent the total population of entities for which the object can considered to be relevant." ; sh:minCount 0 ; sh:or ( [ sh:class as:Object ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:name "bcc" ; sh:path as:bcc ; sh:description "Identifies one or more Objects that are part of the private secondary audience of this Object." ; sh:minCount 0 ; sh:or ( [ sh:class as:Object ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:name "bto" ; sh:path as:bto ; sh:description "Identifies an Object that is part of the private primary audience of this Object." ; sh:minCount 0 ; sh:or ( [ sh:class as:Object ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:name "cc" ; sh:path as:cc ; sh:description "Identifies an Object that is part of the public secondary audience of this Object." ; sh:minCount 0 ; sh:or ( [ sh:class as:Object ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:name "content" ; sh:path as:content ; sh:description "The content or textual representation of the Object encoded as a JSON string. By default, the value of content is HTML. The mediaType property can be used in the object to indicate a different content type. The content MAY be expressed using multiple language-tagged values." ; sh:minCount 0 ; sh:or ( [ sh:datatype xsd:string ] [ sh:datatype rdf:langString ] ) ] ;
  sh:property [ sh:name "context" ; sh:path as:context ; sh:description "Identifies the context within which the object exists or an activity was performed. The notion of 'context' used is intentionally vague. The intended function is to serve as a means of grouping objects and activities that share a common originating context or purpose. An example could be all activities relating to a common project or event." ; sh:minCount 0 ; sh:or ( [ sh:class as:Object ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:name "generator" ; sh:path as:generator ; sh:description "Identifies the entity (e.g. an application) that generated the object." ; sh:minCount 0 ; sh:or ( [ sh:class as:Object ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:name "icon" ; sh:path as:icon ; sh:description "Indicates an entity that describes an icon for this object. The image should have an aspect ratio of one (horizontal) to one (vertical) and should be suitable for presentation at a small size." ; sh:minCount 0 ; sh:or ( [ sh:class as:Image ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:name "image" ; sh:path as:image ; sh:description "Indicates an entity that describes an image for this object. Unlike the icon property, there are no aspect ratio or display size limitations assumed." ; sh:minCount 0 ; sh:or ( [ sh:class as:Image ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:name "inReplyTo" ; sh:path as:inReplyTo ; sh:description "Indicates one or more entities for which this object is considered a response." ; sh:minCount 0 ; sh:or ( [ sh:class as:Object ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:name "location" ; sh:path as:location ; sh:description "Indicates one or more physical or logical locations associated with the object." ; sh:minCount 0 ; sh:or ( [ sh:class as:Object ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:name "name" ; sh:path as:name ; sh:description "A simple, human-readable, plain-text name for the object. HTML markup MUST NOT be included. The name MAY be expressed using multiple language-tagged values." ; sh:minCount 0 ; sh:or ( [ sh:datatype xsd:string ] [ sh:datatype rdf:langString ] ) ] ;
  sh:property [ sh:name "preview" ; sh:path as:preview ; sh:description "Identifies an entity that provides a preview of this object." ; sh:minCount 0 ; sh:or ( [ sh:class as:Link ] [ sh:class as:Object ] ) ] ;
  sh:property [ sh:name "replies" ; sh:path as:replies ; sh:description "Identifies a Collection containing objects considered to be responses to this object." ; sh:class as:Collection ] ;
  sh:property [ sh:name "summary" ; sh:path as:summary ; sh:description "A natural language summarization of the object encoded as HTML. Multiple language tagged summaries MAY be provided." ; sh:minCount 0 ; sh:or ( [ sh:datatype xsd:string ] [ sh:datatype rdf:langString ] ) ] ;
  sh:property [ sh:name "tag" ; sh:path as:tag ; sh:description "One or more 'tags' that have been associated with an objects. A tag can be any kind of Object. The key difference between attachment and tag is that the former implies association by inclusion, while the latter implies associated by reference." ; sh:minCount 0 ; sh:or ( [ sh:class as:Object ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:name "to" ; sh:path as:to ; sh:description "Identifies an entity considered to be part of the public primary audience of an Object" ; sh:minCount 0 ; sh:or ( [ sh:class as:Object ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:name "url" ; sh:path as:url ; sh:description "Identifies one or more links to representations of the object" ; sh:minCount 0 ; sh:or ( [ sh:datatype xsd:anyURI ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:name "duration" ; sh:path as:duration ; sh:description "When the object describes a time-bound resource, such as an audio or video, a meeting, etc, the duration property indicates the object's approximate duration. The value MUST be expressed as an xsd:duration as defined by [ xmlschema11-2], section 3.3.6 (e.g. a period of 5 seconds is represented as 'PT5S')." ; sh:datatype xsd:duration ; sh:maxCount 1 ] ;
  sh:property [ sh:name "endTime" ; sh:path as:endTime ; sh:description "The date and time describing the actual or expected ending time of the object. When used with an Activity object, for instance, the endTime property specifies the moment the activity concluded or is expected to conclude." ; sh:datatype xsd:dateTime ; sh:maxCount 1 ] ;
  sh:property [ sh:name "id" ; sh:path as:id ; sh:description "Provides the globally unique identifier for an Object or Link." ; sh:datatype xsd:anyURI ; sh:maxCount 1 ] ;
  sh:property [ sh:name "mediaType" ; sh:path as:mediaType ; sh:description "When used on a Link, identifies the MIME media type of the referenced resource. When used on an Object, identifies the MIME media type of the value of the content property. If not specified, the content property is assumed to contain text/html content." ; sh:datatype xsd:string ; sh:seeAlso schema:encodingFormat ; sh:maxCount 1 ] ;
  sh:property [ sh:name "published" ; sh:path as:published ; sh:description "The date and time at which the object was published" ; sh:datatype xsd:dateTime ; sh:maxCount 1 ] ;
  sh:property [ sh:name "startTime" ; sh:path as:startTime ; sh:description "The date and time describing the actual or expected starting time of the object. When used with an Activity object, for instance, the startTime property specifies the moment the activity began or is scheduled to begin." ; sh:datatype xsd:dateTime ; sh:maxCount 1 ] ;
  sh:property [ sh:name "updated" ; sh:path as:updated ; sh:description "The date and time at which the object was updated" ; sh:datatype xsd:dateTime ; sh:maxCount 1 ] ;
.

_:LinkProperties
  sh:description "A Link is an indirect, qualified reference to a resource identified by a URL. The fundamental model for links is established by RFC5988. Many of the properties defined by the Activity Vocabulary allow values that are either instances of Object or Link. When a Link is used, it establishes a qualified relation connecting the subject (the containing object) to the resource identified by the href. Properties of the Link are properties of the reference as opposed to properties of the resource." ;
  sh:property [ sh:name "name" ; sh:path as:name ; sh:description "A simple, human-readable, plain-text name for the object. HTML markup MUST NOT be included. The name MAY be expressed using multiple language-tagged values." ; sh:minCount 0 ; sh:or ( [ sh:datatype xsd:string ] [ sh:datatype rdf:langString ] ) ] ;
  sh:property [ sh:name "preview" ; sh:path as:preview ; sh:description "Identifies an entity that provides a preview of this object." ; sh:minCount 0 ; sh:or ( [ sh:class as:Link ] [ sh:class as:Object ] ) ] ;
  sh:property [ sh:name "height" ; sh:path as:height ; sh:description "On a Link, specifies a hint as to the rendering height in device-independent pixels of the linked resource." ; sh:datatype xsd:nonNegativeInteger ; sh:minInclusive 0 ; sh:maxCount 1 ] ;
  sh:property [ sh:name "href" ; sh:path as:href ; sh:description "The target resource pointed to by a Link." ; sh:datatype xsd:anyURI ; sh:maxCount 1 ] ;
  sh:property [ sh:name "hreflang" ; sh:path as:hreflang ; sh:description "Hints as to the language used by the target resource. Value MUST be a [BCP47] Language-Tag." ; sh:datatype xsd:string ; sh:seeAlso schema:inLanguage ; sh:maxCount 1 ] ;
  sh:property [ sh:name "id" ; sh:path as:id ; sh:description "Provides the globally unique identifier for an Object or Link." ; sh:datatype xsd:anyURI ; sh:maxCount 1 ] ;
  sh:property [ sh:name "mediaType" ; sh:path as:mediaType ; sh:description "When used on a Link, identifies the MIME media type of the referenced resource. When used on an Object, identifies the MIME media type of the value of the content property. If not specified, the content property is assumed to contain text/html content." ; sh:datatype xsd:string ; sh:seeAlso schema:encodingFormat ; sh:maxCount 1 ] ;
  sh:property [ sh:name "rel" ; sh:path as:rel ; sh:description "A link relation associated with a Link. The value MUST conform to both the [HTML5] and [RFC5988] 'link relation' definitions. In the [HTML5], any string not containing the 'space' U+0020, 'tab' (U+0009), 'LF' (U+000A), 'FF' (U+000C), 'CR' (U+000D) or ',' (U+002C) characters can be used as a valid link relation." ; sh:minCount 0 ; sh:datatype xsd:string ] ;
  sh:property [ sh:name "width" ; sh:path as:width ; sh:description "On a Link, specifies a hint as to the rendering width in device-independent pixels of the linked resource." ; sh:datatype xsd:nonNegativeInteger ; sh:minInclusive 0 ; sh:maxCount 1 ] ;
.

_:ActivityProperties
  sh:description "An Activity is a subtype of Object that describes some form of action that may happen, is currently happening, or has already happened. The Activity type itself serves as an abstract base type for all types of activities. It is important to note that the Activity type itself does not carry any specific semantics about the kind of action being taken." ;
  sh:node _:ObjectProperties ;
  sh:property [ sh:path as:actor ; sh:description "Describes one or more entities that either performed or are expected to perform the activity. Any single activity can have multiple actors. The actor MAY be specified using an indirect Link." ; sh:minCount 0 ; sh:or ( [ sh:class as:Object ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:path as:instrument ; sh:description "Identifies one or more objects used (or to be used) in the completion of an Activity." ; sh:minCount 0 ; sh:or ( [ sh:class as:Object ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:path as:object ; sh:description "When used within an Activity, describes the direct object of the activity. For instance, in the activity 'John added a movie to his wishlist', the object of the activity is the movie added. When used within a Relationship describes the entity to which the subject is related." ; sh:minCount 0 ; sh:or ( [ sh:class as:Object ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:path as:origin ; sh:description "Describes an indirect object of the activity from which the activity is directed. The precise meaning of the origin is the object of the English preposition 'from'. For instance, in the activity 'John moved an item to List B from List A', the origin of the activity is 'List A'." ; sh:minCount 0 ; sh:or ( [ sh:class as:Object ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:path as:result ; sh:description "Describes the result of the activity. For instance, if a particular action results in the creation of a new resource, the result property can be used to describe that new resource." ; sh:minCount 0 ; sh:or ( [ sh:class as:Object ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:path as:target ; sh:description "Describes the indirect object, or target, of the activity. The precise meaning of the target is largely dependent on the type of action being described but will often be the object of the English preposition 'to'. For instance, in the activity 'John added a movie to his wishlist', the target of the activity is John's wishlist. An activity can have more than one target." ; sh:minCount 0 ; sh:or ( [ sh:class as:Object ] [ sh:class as:Link ] ) ] ;
.

_:IntransitiveActivityProperties
  sh:description "An Activity that has no direct object." ;
  sh:node _:ActivityProperties ;
.

_:CollectionProperties
  sh:description "A Collection is a subtype of Object that represents ordered or unordered sets of Object or Link instances. Refer to the Activity Streams 2.0 Core specification for a complete description of the Collection type." ;
  sh:node _:ObjectProperties ;
  sh:property [ sh:path as:current ; sh:description "In a paged Collection, indicates the page that contains the most recently updated member items." ; sh:or ( [ sh:class as:CollectionPage ] [ sh:class as:OrderedCollectionPage ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:path as:first ; sh:description "In a paged Collection, indicates the furthest preceeding page of items in the collection." ; sh:or ( [ sh:class as:CollectionPage ] [ sh:class as:OrderedCollectionPage ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:path as:items ; sh:description "Identifies the items contained in a collection. The items might be ordered or unordered." ; sh:minCount 0 ; sh:or ( [ sh:class as:Object ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:path as:last ; sh:description "In a paged Collection, indicates the furthest proceeding page of the collection." ; sh:or ( [ sh:class as:CollectionPage ] [ sh:class as:OrderedCollectionPage ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:path as:totalItems ; sh:description "A non-negative integer specifying the total number of objects contained by the logical view of the collection. This number might not reflect the actual number of items serialized within the Collection object instance." ; sh:datatype xsd:nonNegativeInteger ; sh:minInclusive 0 ; sh:maxCount 1 ] ;
.

_:OrderedCollectionProperties
  sh:description "A subtype of Collection in which members of the logical collection are assumed to always be strictly ordered." ;
  sh:node _:CollectionProperties ;
  sh:property [ sh:path as:orderedItems ; sh:description "Identifies the items contained in a collection. The items might be ordered or unordered." ; sh:minCount 0 ; sh:or ( [ sh:class as:Object ] [ sh:class as:Link ] ) ] ;
.

_:CollectionPageProperties
  sh:description "Used to represent distinct subsets of items from a Collection. Refer to the Activity Streams 2.0 Core for a complete description of the CollectionPage object." ;
  sh:node _:CollectionProperties ;
  sh:property [ sh:path as:next ; sh:description "In a paged Collection, indicates the next page of items." ; sh:or ( [ sh:class as:CollectionPage ] [ sh:class as:OrderedCollectionPage ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:path as:partOf ; sh:description "Identifies the Collection to which a CollectionPage objects items belong." ; sh:or ( [ sh:class as:Link ] [ sh:class as:Collection ] ) ] ;
  sh:property [ sh:path as:prev ; sh:description "In a paged Collection, identifies the previous page of items." ; sh:or ( [ sh:class as:CollectionPage ] [ sh:class as:OrderedCollectionPage ] [ sh:class as:Link ] ) ] ;
.

_:OrderedCollectionPageProperties
  sh:description "Used to represent ordered subsets of items from an OrderedCollection. Refer to the Activity Streams 2.0 Core for a complete description of the OrderedCollectionPage object." ;
  sh:node _:OrderedCollectionProperties ;
  sh:property [ sh:path as:startIndex ; sh:description "A non-negative integer value identifying the relative position within the logical view of a strictly ordered collection." ; sh:datatype xsd:nonNegativeInteger ; sh:minInclusive 0 ; sh:maxCount 1 ] ;
  sh:property [ sh:path as:next ; sh:description "In a paged Collection, indicates the next page of items." ; sh:or ( [ sh:class as:CollectionPage ] [ sh:class as:OrderedCollectionPage ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:path as:partOf ; sh:description "Identifies the Collection to which a CollectionPage objects items belong." ; sh:or ( [ sh:class as:Link ] [ sh:class as:Collection ] ) ] ;
  sh:property [ sh:path as:prev ; sh:description "In a paged Collection, identifies the previous page of items." ; sh:or ( [ sh:class as:CollectionPage ] [ sh:class as:OrderedCollectionPage ] [ sh:class as:Link ] ) ] ;
.

_:PlaceProperties
  sh:description "Represents a logical or physical location. See 5.3 Representing Places for additional information." ;
  sh:property [ sh:path as:accuracy ; sh:description "Indicates the accuracy of position coordinates on a Place objects. Expressed in properties of percentage. e.g. '94.0' means '94.0% accurate'." ; sh:datatype xsd:float ; sh:minInclusive 0 ; sh:maxInclusive 100 ; sh:maxCount 1 ] ;
  sh:property [ sh:path as:altitude ; sh:description "Indicates the altitude of a place. The measurement units is indicated using the units property. If units is not specified, the default is assumed to be 'm' indicating meters." ; sh:datatype xsd:float ; sh:maxCount 1 ] ;
  sh:property [ sh:path as:latitude ; sh:description "The latitude of a place" ; sh:datatype xsd:float ; sh:maxCount 1 ] ;
  sh:property [ sh:path as:longitude ; sh:description "The longitude of a place" ; sh:datatype xsd:float ; sh:maxCount 1 ] ;
  sh:property [ sh:path as:radius ; sh:description "The radius from the given latitude and longitude for a Place. The units is expressed by the units property. If units is not specified, the default is assumed to be 'm' indicating 'meters'." ; sh:datatype xsd:float ; sh:minInclusive 0 ; sh:maxCount 1 ] ;
  sh:property [ sh:path as:units ; sh:description "Specifies the measurement units for the radius and altitude properties on a Place object. If not specified, the default is assumed to be 'm' for 'meters'." ] ;
.

_:RelationshipProperties
  sh:description "Describes a relationship between two individuals. The subject and object properties are used to identify the connected individuals. See 5.2 Representing Relationships Between Entities for additional information." ;
  sh:property [ sh:path as:object ; sh:description "When used within a Relationship describes the entity to which the subject is related." ; sh:minCount 0 ; sh:or ( [ sh:class as:Object ] [ sh:class as:Link ] ) ] ;
  sh:property [ sh:path as:relationship ; sh:description "On a Relationship object, the relationship property identifies the kind of relationship that exists between subject and object." ; sh:minCount 0 ; sh:class as:Object ] ;
  sh:property [ sh:path as:subject ; sh:description "On a Relationship object, the subject property identifies one of the connected individuals. For instance, for a Relationship object describing 'John is related to Sally', subject would refer to John." ; sh:minCount 0 ; sh:or ( [ sh:class as:Object ] [ sh:class as:Link ] ) ] ;
.

_:ProfileProperties
  sh:description "A Profile is a content object that describes another Object, typically used to describe Actor Type objects. The describes property is used to reference the object being described by the profile." ;
  sh:property [ sh:path as:describes ; sh:description "On a Profile object, the describes property identifies the object described by the Profile." ; sh:class as:Object ; sh:maxCount 1 ] ;
.

_:TombstoneProperties
  sh:description "A Tombstone represents a content object that has been deleted. It can be used in Collections to signify that there used to be an object at this position, but it has been deleted." ;
  sh:property [ sh:path as:formerType ; sh:description "On a Tombstone object, the formerType property identifies the type of the object that was deleted." ; sh:minCount 0 ; sh:class as:Object ] ;
  sh:property [ sh:path as:deleted ; sh:description "On a Tombstone object, the deleted property is a timestamp for when the object was deleted." ; sh:datatype xsd:dateTime ; sh:maxCount 1 ] ;
.

# 2. Class shapes (each includes its type and inherits property shapes)

:Object a sh:Node ;
  sh:description "Describes an object of any kind. The Object type serves as the base type for most of the other kinds of objects defined in the Activity Vocabulary, including other Core types such as Activity, IntransitiveActivity, Collection and OrderedCollection." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Object ] ;
  sh:node _:ObjectProperties ;
  sh:targetClass as:Object ;
.

:Link a sh:Node ;
  sh:description "A Link is an indirect, qualified reference to a resource identified by a URL. The fundamental model for links is established by RFC5988. Many of the properties defined by the Activity Vocabulary allow values that are either instances of Object or Link. When a Link is used, it establishes a qualified relation connecting the subject (the containing object) to the resource identified by the href. Properties of the Link are properties of the reference as opposed to properties of the resource." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Link ] ;
  sh:node _:LinkProperties ;
  sh:targetClass as:Link ;
.

:Activity a sh:Node ;
  sh:description "An Activity is a subtype of Object that describes some form of action that may happen, is currently happening, or has already happened. The Activity type itself serves as an abstract base type for all types of activities. It is important to note that the Activity type itself does not carry any specific semantics about the kind of action being taken." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Activity ] ;
  sh:node _:ActivityProperties ;
  sh:targetClass as:Activity ;
.

:IntransitiveActivity a sh:Node ;
  sh:description "An Activity that has no direct object." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:IntransitiveActivity ] ;
  sh:node _:IntransitiveActivityProperties ;
  sh:targetClass as:IntransitiveActivity ;
.

:Collection a sh:Node ;
  sh:description "A Collection is a subtype of Object that represents ordered or unordered sets of Object or Link instances. Refer to the Activity Streams 2.0 Core specification for a complete description of the Collection type." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Collection ] ;
  sh:node _:CollectionProperties ;
  sh:targetClass as:Collection ;
.

:OrderedCollection a sh:Node ;
  sh:description "A subtype of Collection in which members of the logical collection are assumed to always be strictly ordered." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:OrderedCollection ] ;
  sh:node _:OrderedCollectionProperties ;
  sh:targetClass as:OrderedCollection ;
.

:CollectionPage a sh:Node ;
  sh:description "Used to represent distinct subsets of items from a Collection. Refer to the Activity Streams 2.0 Core for a complete description of the CollectionPage object." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:CollectionPage ] ;
  sh:node _:CollectionPageProperties ;
  sh:targetClass as:CollectionPage ;
.

:OrderedCollectionPage a sh:Node ;
  sh:description "Used to represent ordered subsets of items from an OrderedCollection. Refer to the Activity Streams 2.0 Core for a complete description of the OrderedCollectionPage object." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:OrderedCollectionPage ] ;
  sh:node _:OrderedCollectionPageProperties ;
  sh:targetClass as:OrderedCollectionPage ;
.

# Activity subclasses
:Accept a sh:Node ;
  sh:description "Indicates that the actor accepts the object. The target property can be used in certain circumstances to indicate the context into which the object has been accepted." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Accept ] ;
  sh:node _:ActivityProperties ;
  sh:targetClass as:Accept ;
.
:Add a sh:Node ;
  sh:description "Indicates that the actor has added the object to the target. If the target property is not explicitly specified, the target would need to be determined implicitly by context. The origin can be used to identify the context from which the object originated." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Add ] ;
  sh:node _:ActivityProperties ;
  sh:targetClass as:Add ;
.
:Create a sh:Node ;
  sh:description "Indicates that the actor has created the object." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Create ] ;
  sh:node _:ActivityProperties ;
  sh:targetClass as:Create ;
.
:Delete a sh:Node ;
  sh:description "Indicates that the actor has deleted the object. If specified, the origin indicates the context from which the object was deleted." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Delete ] ;
  sh:node _:ActivityProperties ;
  sh:targetClass as:Delete ;
.
:Follow a sh:Node ;
  sh:description "Indicates that the actor is \"following\" the object. Following is defined in the sense typically used within Social systems in which the actor is interested in any activity performed by or on the object. The target and origin typically have no defined meaning." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Follow ] ;
  sh:node _:ActivityProperties ;
  sh:targetClass as:Follow ;
.
:Ignore a sh:Node ;
  sh:description "Indicates that the actor is ignoring the object. The target and origin typically have no defined meaning." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Ignore ] ;
  sh:node _:ActivityProperties ;
  sh:targetClass as:Ignore ;
.
:Join a sh:Node ;
  sh:description "Indicates that the actor has joined the object. The target and origin typically have no defined meaning." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Join ] ;
  sh:node _:ActivityProperties ;
  sh:targetClass as:Join ;
.
:Leave a sh:Node ;
  sh:description "Indicates that the actor has left the object. The target and origin typically have no meaning." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Leave ] ;
  sh:node _:ActivityProperties ;
  sh:targetClass as:Leave ;
.
:Like a sh:Node ;
  sh:description "Indicates that the actor likes, recommends or endorses the object. The target and origin typically have no defined meaning." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Like ] ;
  sh:node _:ActivityProperties ;
  sh:targetClass as:Like ;
.
:Offer a sh:Node ;
  sh:description "Indicates that the actor is offering the object. If specified, the target indicates the entity to which the object is being offered." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Offer ] ;
  sh:node _:ActivityProperties ;
  sh:targetClass as:Offer ;
.
:Invite a sh:Node ;
  sh:description "A specialization of Offer in which the actor is extending an invitation for the object to the target." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Invite ] ;
  sh:node :Offer ;
  sh:targetClass as:Invite ;
.
:Reject a sh:Node ;
  sh:description "Indicates that the actor is rejecting the object. The target and origin typically have no defined meaning." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Reject ] ;
  sh:node _:ActivityProperties ;
  sh:targetClass as:Reject ;
.
:TentativeReject a sh:Node ;
  sh:description "A specialization of Reject in which the rejection is considered tentative." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:TentativeReject ] ;
  sh:node :Reject ;
  sh:targetClass as:TentativeReject ;
.
:Remove a sh:Node ;
  sh:description "Indicates that the actor is removing the object. If specified, the origin indicates the context from which the object is being removed." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Remove ] ;
  sh:node _:ActivityProperties ;
  sh:targetClass as:Remove ;
.
:Undo a sh:Node ;
  sh:description "Indicates that the actor is undoing the object. In most cases, the object will be an Activity describing some previously performed action (for instance, a person may have previously 'liked' an article but, for whatever reason, might choose to undo that like at some later point in time). The target and origin typically have no defined meaning." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Undo ] ;
  sh:node _:ActivityProperties ;
  sh:targetClass as:Undo ;
.
:Update a sh:Node ;
  sh:description "Indicates that the actor has updated the object. Note, however, that this vocabulary does not define a mechanism for describing the actual set of modifications made to object. The target and origin typically have no defined meaning." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Update ] ;
  sh:node _:ActivityProperties ;
  sh:targetClass as:Update ;
.
:View a sh:Node ;
  sh:description "Indicates that the actor has viewed the object." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:View ] ;
  sh:node _:ActivityProperties ;
  sh:targetClass as:View ;
.
:Listen a sh:Node ;
  sh:description "Indicates that the actor has listened to the object." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Listen ] ;
  sh:node _:ActivityProperties ;
  sh:targetClass as:Listen ;
.
:Read a sh:Node ;
  sh:description "Indicates that the actor has read the object." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Read ] ;
  sh:node _:ActivityProperties ;
  sh:targetClass as:Read ;
.
:Move a sh:Node ;
  sh:description "Indicates that the actor has moved object from origin to target. If the origin or target are not specified, either can be determined by context." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Move ] ;
  sh:node _:ActivityProperties ;
  sh:targetClass as:Move ;
.
:Announce a sh:Node ;
  sh:description "Indicates that the actor is calling the target's attention the object. The origin typically has no defined meaning." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Announce ] ;
  sh:node _:ActivityProperties ;
  sh:targetClass as:Announce ;
.
:Flag a sh:Node ;
  sh:description "Indicates that the actor is 'flagging' the object. Flagging is defined in the sense common to many social platforms as reporting content as being inappropriate for any number of reasons." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Flag ] ;
  sh:node _:ActivityProperties ;
  sh:targetClass as:Flag ;
.
:Dislike a sh:Node ;
  sh:description "Indicates that the actor dislikes the object." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Dislike ] ;
  sh:node _:ActivityProperties ;
  sh:targetClass as:Dislike ;
.

# IntransitiveActivity subclasses
:Arrive a sh:Node ;
  sh:description "An IntransitiveActivity that indicates that the actor has arrived at the location. The origin can be used to identify the context from which the actor originated. The target typically has no defined meaning." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Arrive ] ;
  sh:node _:IntransitiveActivityProperties ;
  sh:targetClass as:Arrive ;
.
:Travel a sh:Node ;
  sh:description "Indicates that the actor is traveling to target from origin. Travel is an IntransitiveObject whose actor specifies the direct object. If the target or origin are not specified, either can be determined by context." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Travel ] ;
  sh:node _:IntransitiveActivityProperties ;
  sh:targetClass as:Travel ;
.
:Question a sh:Node ;
  sh:description "Represents a question being asked. Question objects are an extension of IntransitiveActivity. That is, the Question object is an Activity, but the direct object is the question itself and therefore it would not contain an object property. Either of the anyOf and oneOf properties MAY be used to express possible answers, but a Question object MUST NOT have both properties." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Question ] ;
  sh:node _:IntransitiveActivityProperties ;
  sh:property [ sh:path as:anyOf ] ;
  sh:property [ sh:path as:oneOf ] ;
  sh:targetClass as:Question ;
.

# Accept/Reject specializations
:TentativeAccept a sh:Node ;
  sh:description "A specialization of Accept indicating that the acceptance is tentative." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:TentativeAccept ] ;
  sh:node :Accept ;
  sh:targetClass as:TentativeAccept ;
.

# Block is a specialization of Ignore
:Block a sh:Node ;
  sh:description "Indicates that the actor is blocking the object. Blocking is a stronger form of Ignore. The typical use is to support social systems that allow one user to block activities or content of other users. The target and origin typically have no defined meaning." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Block ] ;
  sh:node :Ignore ;
  sh:targetClass as:Block ;
.

# Actor types
:Application a sh:Node ;
  sh:description "Describes a software application." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Application ] ;
  sh:node _:ObjectProperties ;
  sh:targetClass as:Application ;
.
:Group a sh:Node ;
  sh:description "Represents a formal or informal collective of Actors." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Group ] ;
  sh:node _:ObjectProperties ;
  sh:targetClass as:Group ;
.
:Organization a sh:Node ;
  sh:description "Represents an organization." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Organization ] ;
  sh:node _:ObjectProperties ;
  sh:targetClass as:Organization ;
.
:Person a sh:Node ;
  sh:description "Represents an individual person." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Person ] ;
  sh:node _:ObjectProperties ;
  sh:targetClass as:Person ;
.
:Service a sh:Node ;
  sh:description "Represents a service of any kind." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Service ] ;
  sh:node _:ObjectProperties ;
  sh:targetClass as:Service ;
.

# Object and Link types
:Relationship a sh:Node ;
  sh:description "Describes a relationship between two individuals. The subject and object properties are used to identify the connected individuals." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Relationship ] ;
  sh:node _:RelationshipProperties ;
  sh:targetClass as:Relationship ;
.
:Document a sh:Node ;
  sh:description "Represents a document of any kind." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Document ] ;
  sh:node _:ObjectProperties ;
  sh:targetClass as:Document ;
.
:Article a sh:Node ;
  sh:description "" ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Article ] ;
  sh:node _:ObjectProperties ;
  sh:targetClass as:Article ;
.
:Audio a sh:Node ;
  sh:description "Represents an audio document of any kind." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Audio ] ;
  sh:node :Document ;
  sh:targetClass as:Audio ;
.
:Image a sh:Node ;
  sh:description "An image document of any kind" ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Image ] ;
  sh:node :Document ;
  sh:targetClass as:Image ;
.
:Video a sh:Node ;
  sh:description "Represents a video document of any kind." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Video ] ;
  sh:node :Document ;
  sh:targetClass as:Video ;
.
:Note a sh:Node ;
  sh:description "Represents a short written work typically less than a single paragraph in length." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Note ] ;
  sh:node _:ObjectProperties ;
  sh:targetClass as:Note ;
.
:Page a sh:Node ;
  sh:description "Represents a Web Page." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Page ] ;
  sh:node _:ObjectProperties ;
  sh:targetClass as:Page ;
.
:Event a sh:Node ;
  sh:description "Represents any kind of event." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Event ] ;
  sh:node _:ObjectProperties ;
  sh:targetClass as:Event ;
.
:Place a sh:Node ;
  sh:description "Represents a logical or physical location. See 5.3 Representing Places for additional information." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Place ] ;
  sh:node _:PlaceProperties ;
  sh:targetClass as:Place ;
.
:Mention a sh:Node ;
  sh:description "A specialized Link that represents an @mention." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Mention ] ;
  sh:node _:LinkProperties ;
  sh:targetClass as:Mention ;
.
:Profile a sh:Node ;
  sh:description "A Profile is a content object that describes another Object, typically used to describe Actor Type objects. The describes property is used to reference the object being described by the profile." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Profile ] ;
  sh:node _:ProfileProperties ;
  sh:targetClass as:Profile ;
.
:Tombstone a sh:Node ;
  sh:description "A Tombstone represents a content object that has been deleted. It can be used in Collections to signify that there used to be an object at this position, but it has been deleted." ;
  sh:property [ sh:path rdf:type ; sh:hasValue as:Tombstone ] ;
  sh:node _:TombstoneProperties ;
  sh:targetClass as:Tombstone ;
.
